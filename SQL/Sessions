USER, TIME, SESS_ID
u1, t1, 0
u1, t2, 0
u2, t3, 1
u2, t4, 1
u3, t5, 2
u1, t6, 3
u1, t7, 3
u4, t8, 4

USER, START, END
u1,   t1     t2


IF USER == LAG(USER) THEN LAG(SESS_ID) as SESS_ID ELSE LAG(SESS_ID)+1 as SESS_ID

SELECT distinct * FROM
(SELECT
USER,
min(TIME) OVER(PARTITON BY SESS_ID ORDER BY TIME) as START,
max(TIME) OVER(PARTITON BY SESS_ID ORDER BY TIME) as END
FROM
  (SELECT USER, TIME,
  CASE WHEN USER == LAG(USER) OVER(ORDER BY TIME) THEN LAG(SESS_ID) OVER(ORDER BY TIME) ELSE LAG(SESS_ID)+1 as SESS_ID
    FROM sessions
  )
)

